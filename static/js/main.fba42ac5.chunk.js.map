{"version":3,"sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","services/api.jsx","components/ImageGallery/ImageGalleryItem.styled.jsx","components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.styled.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["SpinnerContainer","styled","div","Spinner","type","color","height","width","timeout","Header","header","Form","form","Button","button","Span","span","Input","input","SearchBar","onSubmit","e","preventDefault","target","elements","searchImage","value","toLowerCase","name","autoComplete","autoFocus","placeholder","fetchImages","page","a","axios","get","response","data","hits","Li","li","Img","img","ImageGalleryItem","image","onClick","webformatURL","tags","src","alt","Ul","ul","ImageGallery","images","onSelect","map","id","ButtonLoad","Overlay","ModalWindow","Modal","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","currentTarget","App","useState","selectedImage","setSelectedImage","setSearchImage","setImages","setPage","status","setStatus","showModal","setShowModal","gallery","trim","length","toast","error","prevImages","scrollTo","top","document","documentElement","scrollHeight","behavior","getFetchImages","handleSelectedImage","imageURL","showButton","p","largeImageURL","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fba42ac5.chunk.js","sourcesContent":["import styled from \"@emotion/styled/\";\n\nexport const SpinnerContainer = styled.div`\nposition: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n`;","import Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { SpinnerContainer } from \"./Loader.styled\";\n\nexport default function Spinner () {\n    return (\n<SpinnerContainer>\n    <Loader type=\"Rings\" color=\"#00BFFF\" height={80} width={80} \n    timeout={3000} \n  />\n  </SpinnerContainer>)\n}","import styled from '@emotion/styled';\n\nexport const Header = styled.header`\ntop: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b3;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`\n\nexport const Form = styled.form`\ndisplay: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`\n\nexport const Button = styled.button`  \ndisplay: inline-block;\nwidth: 48px;\nheight: 48px;\nborder: 0;\nbackground-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\nbackground-size: 40%;\nbackground-repeat: no-repeat;\nbackground-position: center;\nopacity: 0.6;\ntransition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\ncursor: pointer;\noutline: none;\n&:hover{\n    opacity: 1;\n}\n`\n\nexport const Span = styled.span`\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nclip-path: inset(50%);\nborder: 0;\n`\nexport const Input = styled.input`\ndisplay: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;}\n`\n\n","\nimport {Header, Form, Button, Span, Input} from './SearchBar.styled'\nimport PropTypes from 'prop-types';\n\n\nconst SearchBar = ({ onSubmit }) => {\n  const handleSearch = e => {\n    e.preventDefault()\n    onSubmit(e.target.elements.searchImage.value.toLowerCase())\n  }\n\n\n return (\n   <Header >\n     <Form  onSubmit={handleSearch} >\n    <Button type=\"submit\">\n      <Span>Search</Span>\n    </Button>\n\n    <Input\n         type=\"text\"\n         name='searchImage'\n       autoComplete=\"off\"\n     autoFocus\n     placeholder=\"Search images and photos\"\n   />\n </Form>\n</Header>\n )\n}\n\nexport default SearchBar\n\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\n","import axios from 'axios';\n\nexport const fetchImages = async (name, page) => {\n    const response = await axios.get(`https://pixabay.com/api/?q=${name}&page=${page}&key=22578117-98ddcf36fbc3d0da8c48aeee6&image_type=photo&orientation=horizontal&per_page=12`)\n  \n    return response.data.hits;\n  }","import styled from '@emotion/styled';\nexport const Li = styled.li`\nborder-radius: 2px;\nbox-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n  0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`\n\nexport const Img = styled.img`\nwidth: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover{\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`","import {Li, Img} from './ImageGalleryItem.styled'\nimport PropTypes from 'prop-types';\n\nexport default function ImageGalleryItem ({image, onClick}) {\n    const {webformatURL, tags} = image;\n    return (\n    <Li onClick={onClick}>\n  <Img src={webformatURL} alt={tags}/>\n</Li>\n)\n}\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\nexport const Ul = styled.ul`\ndisplay: grid;\nmax-width: calc(100vw - 48px);\ngrid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\ngrid-gap: 16px;\nmargin-top: 0;\nmargin-bottom: 0;\npadding: 0;\nlist-style: none;\nmargin-left: auto;\nmargin-right: auto;\n`","import ImageGalleryItem from '../ImageGallery/ImageGalleryItem';\nimport PropTypes from 'prop-types';\nimport {Ul} from './ImageGallery.styled'\n\nconst ImageGallery = ({images, onSelect}) =>  {\n    return (\n        <Ul>\n            {images.map((image,id) => (\n                <ImageGalleryItem key = {id} image={image} \n                onClick={() => onSelect(image)}\n                />)\n                )}  \n           </Ul>)}\n             \nexport default ImageGallery;\n\n\nImageGallery.propTypes = {\n    images: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        images: PropTypes.object,\n      }),\n    ),\n    onSelect: PropTypes.func.isRequired,\n  };","import styled from '@emotion/styled';\n\nexport const ButtonLoad = styled.button`\ndisplay: block;\nmargin-left: auto;\nmargin-right: auto;\nmargin-top: 20px;\nmargin-bottom: 20px;\npadding: 8px 16px;\nborder-radius: 5px;\nbackground-color: #3f51b5;\ntransition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\ntext-align: center;\ncolor: #fff;\nborder: 0;\ntext-decoration: none;\ncursor: pointer;\nfont-family: inherit;\nfont-size: 18px;\nline-height: 24px;\nfont-style: normal;\nfont-weight: 500;\nmin-width: 180px;\nbox-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n  0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &:hover,\n  &:focus{\n    background-color: #303f9f;\n  }\n`","import PropTypes from 'prop-types';\nimport { ButtonLoad } from \"./Button.styled\"\n\nexport default function Button ({onClick}) {\n    return ( <ButtonLoad type=\"button\" onClick={onClick}>Load more...</ButtonLoad>\n        )\n    }\n\n\n    Button.propTypes = {\n        onClick: PropTypes.func.isRequired,\n      };","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\nposition: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`\n\nexport const ModalWindow = styled.div`\nmax-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`","import { useEffect } from 'react';\nimport { Overlay, ModalWindow } from \"./Modal.styled\";\nimport PropTypes from 'prop-types';\n\n\nexport default function Modal ({src, alt, onSelect})  {\nuseEffect(()=>{\n  window.addEventListener('keydown', handleKeyDown);\nreturn () => {\n  window.removeEventListener('keydown', handleKeyDown);\n}})\n\nconst handleKeyDown = e => {\n  if (e.code === 'Escape') {\n    onSelect();\n  }\n};\n\nconst handleBackDrop = e => {\n  if (e.currentTarget === e.target) {\n    onSelect();\n  }\n};\n\n\nreturn (\n  <Overlay onClick={handleBackDrop}>\n    <ModalWindow>\n      <img src={src} alt={alt} />\n    </ModalWindow>\n  </Overlay>\n\n);\n\n}\n  \n\n\n\n\n// export default class Modal extends Component {\n//     componentDidMount() {\n//       window.addEventListener('keydown', this.handleKeyDown);\n//     }\n  \n//     componentWillUnmount() {\n//       window.removeEventListener('keydown', this.handleKeyDown);\n//     }\n  \n//     handleKeyDown = e => {\n//       if (e.code === 'Escape') {\n//         this.props.onSelect();\n//       }\n//     };\n  \n//     handleBackDrop = e => {\n//       if (e.currentTarget === e.target) {\n//         this.props.onSelect();\n//       }\n//     };\n  \n//     render() {\n//       const { src, alt } = this.props;\n//      return (\n//         <Overlay onClick={this.handleBackDrop}>\n//           <ModalWindow>\n//             <img src={src} alt={alt} />\n//           </ModalWindow>\n//         </Overlay>\n    \n//       );\n//     }\n//   }\n\n  Modal.propTypes = {\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string,\n  };","import { useState, useEffect } from 'react';\nimport Spinner from './components/Loader/Loader';\nimport toast, { Toaster } from 'react-hot-toast';\n\nimport SearchBar from './components/SearchBar/SearchBar';\nimport { fetchImages } from './services/api';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\n\nexport default function App() {\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [searchImage, setSearchImage] = useState(null);\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [status, setStatus] = useState('idle');\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!searchImage) return;\n    setStatus('pending');\n    async function getFetchImages() {\n      try {\n        const gallery = await fetchImages(searchImage, page);\n        if (searchImage.trim() === '' || gallery.length === 0) {\n          return toast.error(`нет картинки с именем  ${searchImage}`);\n        }\n        setImages(prevImages => [...prevImages, ...gallery]);\n        setStatus('resolved');\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      } catch (error) {\n        setStatus('rejected');\n        toast.error('что-то пошло не так');\n      }\n    }\n    getFetchImages();\n  }, [page, searchImage]);\n\n  const handleFormSubmit = searchImage => {\n    setPage(1);\n    setImages([]);\n    setSearchImage(searchImage);\n  };\n\n  const handleButtonLoadMore = () => {\n    setPage(p => p + 1);\n  };\n\n  const handleSelectedImage = imageURL => {\n    setShowModal(!showModal);\n    setSelectedImage(imageURL);\n  };\n\n  const showButton = images.length >= 12;\n  return (\n    <div>\n      <SearchBar onSubmit={handleFormSubmit} />\n      {status === 'pending' && <Spinner />}\n      <ImageGallery images={images} onSelect={handleSelectedImage} />\n      {showButton && <Button onClick={handleButtonLoadMore} />}\n      {showModal && (\n        <Modal\n          src={selectedImage.largeImageURL}\n          alt={selectedImage.tags}\n          onSelect={handleSelectedImage}\n        />\n      )}\n      <Toaster />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}